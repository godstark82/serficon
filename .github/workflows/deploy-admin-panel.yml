name: Deploy Admin Panel to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: 'stable'

      - name: Install dependencies
        working-directory: ./admin-panel
        run: flutter pub get

      - name: Create .env file
        working-directory: ./admin-panel
        run: |
          echo "FIREBASE_OPTIONS_API_KEY=${{ secrets.FIREBASE_OPTIONS_API_KEY }}" > .env
          echo "FIREBASE_OPTIONS_APP_ID=${{ secrets.FIREBASE_OPTIONS_APP_ID }}" >> .env
          echo "FIREBASE_OPTIONS_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_OPTIONS_MESSAGING_SENDER_ID }}" >> .env
          echo "FIREBASE_OPTIONS_PROJECT_ID=${{ secrets.FIREBASE_OPTIONS_PROJECT_ID }}" >> .env
          echo "FIREBASE_OPTIONS_AUTH_DOMAIN=${{ secrets.FIREBASE_OPTIONS_AUTH_DOMAIN }}" >> .env
          echo "FIREBASE_OPTIONS_STORAGE_BUCKET=${{ secrets.FIREBASE_OPTIONS_STORAGE_BUCKET }}" >> .env
          echo "FIREBASE_OPTIONS_MEASUREMENT_ID=${{ secrets.FIREBASE_OPTIONS_MEASUREMENT_ID }}" >> .env
          echo "MAILGUN_DOMAIN=${{ secrets.MAILGUN_DOMAIN }}" >> .env
          echo "MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}" >> .env
    
      - name: Generate env.g.dart
        working-directory: ./admin-panel
        run: flutter pub run build_runner build -d

      - name: Build
        working-directory: ./admin-panel
        run: flutter build web --web-renderer html --release

      - name: Create CNAME file
        run: echo "${{ secrets.DOMAIN }}" > ./admin-panel/build/web/CNAME

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './admin-panel/build/web'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
